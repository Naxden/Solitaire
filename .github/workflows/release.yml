name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install deps (raylib system reqs)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake \
            libx11-dev libxi-dev libxrandr-dev libxinerama-dev libxcursor-dev \
            libgl1-mesa-dev libasound2-dev libpulse-dev

      - name: Configure
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --parallel

      - name: Package (CPack)
        run: cmake --build build --target package

      - name: Collect Linux artifacts
        env:
          TAG: ${{ github.ref_name }}
        run: |
          mkdir -p dist
          mkdir -p dist/Solitaire
          cp build/Solitaire dist/Solitaire/Solitaire
          chmod +x dist/Solitaire/Solitaire
          cp -r assets dist/Solitaire/assets
          cp LICENSE README.md dist/Solitaire/
          tar -C dist -czf "Solitaire_${TAG}-linux-x86_64.tar.gz" Solitaire
          mv "Solitaire_${TAG}-linux-x86_64.tar.gz" dist/
          rm -rf dist/Solitaire
          DEB_FILE=$(find build -maxdepth 1 -type f -name 'Solitaire-*.deb' | head -n1)
          if [ -n "$DEB_FILE" ]; then
            mv "$DEB_FILE" "dist/Solitaire_${TAG}-linux-x86_64.deb"
          else
            echo "warning: no DEB package produced" >&2
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: Solitaire-linux
          path: dist/Solitaire_*-linux-*

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install NSIS
        shell: pwsh
        run: choco install nsis --no-progress -y

      - name: Configure (MSVC)
        run: cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release --parallel

      - name: Package (CPack)
        run: cmake --build build --config Release --target PACKAGE

      - name: Collect Windows installer
        shell: pwsh
        env:
          TAG: ${{ github.ref_name }}
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          $installer = Get-ChildItem -Path build -Filter 'Solitaire-*.exe' -File -Recurse | Where-Object { $_.Name -ne 'Solitaire.exe' } | Select-Object -First 1
          if ($null -eq $installer) {
            throw 'No NSIS installer produced by CPack.'
          }
          Move-Item -Path $installer.FullName -Destination (Join-Path dist "Solitaire_$env:TAG-windows-x64.exe") -Force

      - uses: actions/upload-artifact@v4
        with:
          name: Solitaire-windows
          path: dist/Solitaire_*-windows-*.exe

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --parallel

      - name: Package (CPack)
        run: cmake --build build --target package

      - name: Collect macOS disk image
        env:
          TAG: ${{ github.ref_name }}
        run: |
          mkdir -p dist
          DMG_FILE=$(find build -maxdepth 1 -type f -name 'Solitaire-*.dmg' | head -n1)
          if [ -z "$DMG_FILE" ]; then
            echo "error: no DMG produced by CPack" >&2
            exit 1
          fi
          mv "$DMG_FILE" "dist/Solitaire_${TAG}-macos.dmg"

      - uses: actions/upload-artifact@v4
        with:
          name: Solitaire-macos
          path: dist/Solitaire_*-macos*.dmg

  publish:
    needs: [linux, windows, macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Flatten artifacts
        run: |
          shopt -s globstar
          mv artifacts/**/Solitaire_*.tar.gz . 2>/dev/null || true
          mv artifacts/**/Solitaire_*.zip . 2>/dev/null || true
          mv artifacts/**/Solitaire_*.deb . 2>/dev/null || true
          mv artifacts/**/Solitaire_*.dmg . 2>/dev/null || true
          mv artifacts/**/Solitaire_*.exe . 2>/dev/null || true
          ls -la

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            Solitaire_*.zip
            Solitaire_*.tar.gz
            Solitaire_*.deb
            Solitaire_*.dmg
            Solitaire_*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
